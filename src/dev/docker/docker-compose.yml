services:
  mq:
    image: rabbitmq:${RABBITMQ_TAG:-management}
    container_name: mov_mq_dev
    restart: unless-stopped
    ports:
      - ${MQ_PORT:-5672}:5672
      - ${MQ_UI_PORT:-8081}:15672
    networks:
      - c0_patient_treatment_ui_dev
    environment:
      RABBITMQ_DEFAULT_USER: ${MQ_USER:-mov}
      RABBITMQ_DEFAULT_PASS: ${MQ_PASSWORD:-password}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s

  mongo:
    image: mongo:${MONGO_TAG:-latest}
    container_name: mov_db_dev
    restart: unless-stopped
    ports:
      - ${MONGO_PORT:-27017}:27017
    networks:
      - c0_patient_treatment_ui_dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-movDB}
      MOV_DB_NAME: ${MOV_DB_NAME:-movDB}
      MOV_DB_USER_NAME: ${MOV_DB_USER_NAME:-mov}
      MOV_DB_USER_PASSWORD: ${MOV_DB_USER_PASSWORD:-password}
    volumes:
      - ./initialize-movDB.js:/docker-entrypoint-initdb.d/init-mongo.js
      - ${MONGO_LOCAL_DATA:-~/mongo_data/movDB}:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet localhost/${DB_NAME:-movDB} --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s  

  mongo_express:
    image: mongo-express:${MONGO_EXPRESS_TAG:-latest}
    container_name: mov_db_ui_dev
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
        restart: true
    ports:
      - ${MONGO_ADMIN_PORT:-8082}:8081
    networks:  
      - c0_patient_treatment_ui_dev
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_ADMIN_USER:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_ADMIN_PASSWORD:-password}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER:-root}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT:-27017}
      ME_CONFIG_MONGODB_SERVER: mongo

  pg:
    image: postgres:${POSTGRES_TAG:-17}
    container_name: pg_dev
    ports:
      - ${PG_PORT:-5432}:5432
    networks:
      - c0_patient_treatment_ui_dev
    environment:
      POSTGRES_USER: ${PG_USER_NAME:-c0_patient_treatment_ui}
      POSTGRES_PASSWORD: ${PG_USER_PASSWORD:-password}
      POSTGRES_DB: ${PG_DB_NAME:-c0_patient_treatment_ui_db}
    volumes:
      - ${PG_LOCAL_DATA:-~/pg_data/c0_patient_treatment_ui_db}:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s  

  pg_admin:
    image: dpage/pgadmin4:${MONGO_EXPRESS_TAG:-latest}
    container_name: pg_db_ui_dev
    restart: unless-stopped
    depends_on:
      pg:
        condition: service_healthy
        restart: true
    ports:
      - ${PG_ADMIN_PORT:-8083}:80
    networks:  
      - c0_patient_treatment_ui_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_USER:-pg_admin@valawai.eu}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD:-password}
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass

  mov:
    image: valawai/mov:${MOV_TAG:-latest}
    container_name: mov_dev
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
        restart: true
      mq:
        condition: service_healthy
        restart: true
    ports:
      - ${MOV_UI_PORT:-8084}:8080
    networks:  
      - c0_patient_treatment_ui_dev
    environment:
      RABBITMQ_HOST: mq
      RABBITMQ_PORT: ${MQ_PORT:-5672}
      RABBITMQ_USERNAME: ${MQ_USER:-mov}
      RABBITMQ_PASSWORD: ${MQ_PASSWORD:-password}
      QUARKUS_MONGODB_DATABASE: ${MOV_DB_NAME:-movDB}
      QUARKUS_MONGODB_CREDENTIALS_USERNAME: ${MOV_DB_USER_NAME:-mov}
      QUARKUS_MONGODB_CREDENTIALS_PASSWORD: ${MOV_DB_USER_PASSWORD:-password}
      QUARKUS_MONGODB_HOSTS: mongo:${MONGO_PORT:-27017}
      MOV_URL: http://localhost:${MOV_UI_PORT:-8084}
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8080/q/health | grep -m 1 -P \"^[\\s|\\{|\\\"]+status[\\s|\\:|\\\"]+.+\\\"\" |grep -q \"\\\"UP\\\"\""]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s  


networks:
  c0_patient_treatment_ui_dev:

configs:
  pgpass:
    content: ${PG_DB_NAME:-c0_patient_treatment_ui_db}:5432:*:${PG_USER_NAME:-c0_patient_treatment_ui}:${PG_USER_PASSWORD:-password}
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "C0 Patient treatment ui DB",
        "Host": "host.docker.internal",
        "Port": 5432,
        "MaintenanceDB": "${PG_DB_NAME:-c0_patient_treatment_ui_db}",
        "Username": "${PG_USER_NAME:-c0_patient_treatment_ui}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}