services:
  mq:
    image: rabbitmq:${RABBITMQ_TAG:-management}
    container_name: mov_mq_dev
    restart: unless-stopped
    ports:
      - ${MQ_PORT:-5672}:5672
      - ${MQ_UI_PORT:-8081}:15672
    networks:
      - c0_patient_treatment_ui_dev
    environment:
      RABBITMQ_DEFAULT_USER: ${MQ_USER:-mov}
      RABBITMQ_DEFAULT_PASS: ${MQ_PASSWORD:-password}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s

  mongo:
    image: mongo:${MONGO_TAG:-latest}
    container_name: mov_db_dev
    restart: unless-stopped
    ports:
      - ${MONGO_PORT:-27017}:27017
    networks:
      - c0_patient_treatment_ui_dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-movDB}
    volumes:
      - ./initialize-movDB.js:/docker-entrypoint-initdb.d/init-mongo.js
      - ${MONGO_LOCAL_DATA:-~/mongo_data/movDB}:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet localhost/${DB_NAME:-movDB} --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s  

  mongo_express:
    image: mongo-express:${MONGO_EXPRESS_TAG:-latest}
    container_name: mov_db_ui_dev
    restart: unless-stopped
    depends_on:
      - mongo
    ports:
      - ${MONGO_ADMIN_PORT:-8082}:8081
    networks:  
      - c0_patient_treatment_ui_dev
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_ADMIN_USER:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_ADMIN_PASSWORD:-password}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER:-root}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT:-27017}
      ME_CONFIG_MONGODB_SERVER: mongo

  mail:
    image: dbck/mailtrap:${MAILTRAP_TAG:-latest}
    container_name: email_dev
    ports:
      - "${MAIL_SMTP:-1025}:25"
      - "${MAIL_SMTPS:-1465}:465"
      - "${MAIL_IMAP:-1587}:587"
      - "${MAIL_IMAP:-1143}:143"
      - "${MAIL_IMAPS:-1993}:993"
      - "${MAIL_WEB:-8083}:80"
    networks:
      - c0_patient_treatment_ui_dev
    environment:
      MAILTRAP_USER: ${MAIL_USER_NAME:-user}
      MAILTRAP_PASSWORD: ${MAIL_USER_PASSWORD:-password}

  mov:
    image: valawai/mov:${MOV_TAG:-latest}
    container_name: mov_dev
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
        restart: true
      mq:
        condition: service_healthy
        restart: true
    ports:
      - ${MOV_UI_PORT:-8084}:8080
    networks:  
      - c0_patient_treatment_ui_dev
    environment:
      RABBITMQ_HOST: mq
      RABBITMQ_PORT: ${MQ_PORT:-5672}
      RABBITMQ_USERNAME: ${MQ_USER:-mov}
      RABBITMQ_PASSWORD: ${MQ_PASSWORD:-password}
      QUARKUS_MONGODB_DATABASE: ${DB_NAME:-movDB}
      QUARKUS_MONGODB_CREDENTIALS_USERNAME: ${DB_USER_NAME:-mov}
      QUARKUS_MONGODB_CREDENTIALS_PASSWORD: ${DB_USER_PASSWORD:-password}
      QUARKUS_MONGODB_HOSTS: mongo:${MONGO_PORT:-27017}
      MOV_URL: http://localhost:${MOV_UI_PORT:-8083}
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8080/q/health | grep -m 1 -P \"^[\\s|\\{|\\\"]+status[\\s|\\:|\\\"]+.+\\\"\" |grep -q \"\\\"UP\\\"\""]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s  


networks:
  c0_patient_treatment_ui_dev:
