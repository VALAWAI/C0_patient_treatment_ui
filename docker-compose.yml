services:
  patient_treatment_ui:
    image: valawai/c0_patient_treatment_ui:${C0_PATIENT_TREATMENT_UI_TAG:-latest}
    container_name: c0_patient_treatment_ui
    networks:  
      - patient_treatment_ui_net
    ports:
      - ${C0_PATIENT_TREATMENT_UI_PORT:-8080}:8080
    depends_on:
      mov:
        condition: service_healthy
        restart: true
        required: false
    environment:
      RABBITMQ_HOST: ${MQ_HOST:-mq}
      RABBITMQ_PORT: ${MQ_PORT:-5672}
      RABBITMQ_USERNAME: ${MQ_USER:-mov}
      RABBITMQ_PASSWORD: ${MQ_PASSWORD:-password}
      C0_PATIENT_TREATMENT_UI_URL: http://localhost:${C0_PATIENT_TREATMENT_UI_PORT:-8080}
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8080/q/health | grep -m 1 -P \"^[\\s|\\{|\\\"]+status[\\s|\\:|\\\"]+.+\\\"\" |grep -q \"\\\"UP\\\"\""]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s

  mq:
    image: rabbitmq:${RABBITMQ_TAG:-management}
    container_name: mov_mq
    profiles: [mov]
    hostname: ${MQ_HOST:-mq}
    ports:
      - ${MQ_LOCAL_PORT:-5672}:5672
      - ${MQ_LOCAL_UI_PORT:-8082}:15672
    networks:
      - patient_treatment_ui_net
    environment:
      RABBITMQ_DEFAULT_USER: ${MQ_USER:-mov}
      RABBITMQ_DEFAULT_PASS: ${MQ_PASSWORD:-password}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s

  mongo:
    image: mongo:${MONGODB_TAG:-latest}
    container_name: mov_db
    profiles: [mov]
    hostname: ${DB_HOST:-mongo}
    ports:
      - ${MONGO_LOCAL_PORT:-27017}:27017
    networks:
      - patient_treatment_ui_net
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${DB_NAME:-movDB}
      DB_NAME: ${MOV_DB_NAME:-movDB}
      DB_USER_NAME: ${MOV_DB_USER_NAME:-mov}
      DB_USER_PASSWORD: ${MOV_DB_USER_PASSWORD:-password}
    volumes:
      - ./src/deploy/docker/initialize-movDB.js:/docker-entrypoint-initdb.d/init-mongo.js
      - ${MONGO_LOCAL_DATA:-~/mongo_data/patienttreatmentuiMovDB}:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet localhost/${DB_NAME:-movDB} --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s  

  pg:
    image: postgres:${POSTGRES_TAG:-17}
    container_name: pg
    profiles: [pg]
    ports:
      - ${PG_PORT:-5432}:5432
    networks:
      - patient_treatment_ui_net
    environment:
      POSTGRES_USER: ${PG_USER_NAME:-c0_patient_treatment_ui}
      POSTGRES_PASSWORD: ${PG_USER_PASSWORD:-password}
      POSTGRES_DB: ${PG_DB_NAME:-c0_patient_treatment_ui_db}
    volumes:
      - ${PG_LOCAL_DATA:-~/.pg_data/c0_patient_treatment_ui_db}:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s  
  
  mov:
    image: valawai/mov:${MOV_TAG:-latest}
    container_name: mov
    profiles: [mov]
    depends_on:
      mongo:
        condition: service_healthy
        restart: true
      mq:
        condition: service_healthy
        restart: true
    ports:
      - ${MOV_UI_PORT:-8081}:8080
    networks:  
      - patient_treatment_ui_net
    environment:
      RABBITMQ_HOST: ${MQ_HOST:-mq}
      RABBITMQ_PORT: ${MQ_PORT:-5672}
      RABBITMQ_USERNAME: ${MQ_USER:-mov}
      RABBITMQ_PASSWORD: ${MQ_PASSWORD:-password}
      QUARKUS_MONGODB_DATABASE: ${MOV_DB_NAME:-movDB}
      QUARKUS_MONGODB_CREDENTIALS_USERNAME: ${MOV_DB_USER_NAME:-mov}
      QUARKUS_MONGODB_CREDENTIALS_PASSWORD: ${MOV_DB_USER_PASSWORD:-password}
      QUARKUS_MONGODB_HOSTS: ${DB_HOST:-mongo}:${MONGO_PORT:-27017}
      MOV_URL: http://localhost:${MOV_UI_PORT:-8081}
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8080/q/health | grep -m 1 -P \"^[\\s|\\{|\\\"]+status[\\s|\\:|\\\"]+.+\\\"\" |grep -q \"\\\"UP\\\"\""]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
      start_interval: 5s  

networks:
  patient_treatment_ui_net:
